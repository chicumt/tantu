<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.FileDao">

    <resultMap type="com.example.entity.File" id="FileMap">
        <result property="fileId" column="file_id" jdbcType="INTEGER"/>
        <result property="file" column="file" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="FileMap">
        select
          file_id, file, type, name
        from file
        where file_id = #{fileId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="FileMap">
        select
          file_id, file, type, name
        from file
        <where>
            <if test="fileId != null">
                and file_id = #{fileId}
            </if>
            <if test="file != null">
                and file = #{file}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from file
        <where>
            <if test="fileId != null">
                and file_id = #{fileId}
            </if>
            <if test="file != null">
                and file = #{file}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="fileId" useGeneratedKeys="true">
        insert into file(file_id, file, type, name)
        values (#{fileId}, #{file}, #{type}, #{name})
    </insert>

    <insert id="insertBatch" keyProperty="fileId" useGeneratedKeys="true">
        insert into file(file_id, file, type, name)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.fileId}, #{entity.file}, #{entity.type}, #{entity.name})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="fileId" useGeneratedKeys="true">
        insert into file(file_id, file, type, name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.fileId}, #{entity.file}, #{entity.type}, #{entity.name})
        </foreach>
        on duplicate key update
        file_id = values(file_id),
        file = values(file),
        type = values(type),
        name = values(name)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update file
        <set>
            <if test="fileId != null">
                file_id = #{fileId},
            </if>
            <if test="file != null">
                file = #{file},
            </if>
            <if test="type != null and type != ''">
                type = #{type},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
        </set>
        where file_id = #{fileId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from file where file_id = #{fileId}
    </delete>

</mapper>

